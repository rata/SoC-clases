/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */
/*
#include <stdio.h>
#include "platform.h"

void print(char *str);

int main()
{
    init_platform();

    print("Hello World\n\r");

    cleanup_platform();
    return 0;
}
*/

#include "xmul.h"
#include "xparameters.h"



/*      Define the base memory address of the led_controller IP core */
#define MULTIPLICADOR_BASE XPAR_MUL_0_S_AXI_AXILITES_BASEADDR

/* main function */
int main(void){

        XMul multiplicador;
        /* unsigned 32-bit variables  */
        u32 operandoA = 0x00000004;
        u32 operandoB = 0x00000003;
        u32 producto;

        XMul_Initialize(&multiplicador, XPAR_MUL_0_DEVICE_ID);
        //XGpio_Initialize(&dip, XPAR_SWITCHES_DEVICE_ID); // Modify
        XMul_Start(&multiplicador);

        xil_printf("multiplier IP test begin.\r\n");
        xil_printf("--------------------------------------------\r\n\n");
    	xil_printf("checkpoint 1\r\n");

    	for(;;){
        while(!XMul_IsReady(&multiplicador));
        operandoA++;
    //    xil_printf("checkpoint 2\r\n");
        XMul_WriteReg(MULTIPLICADOR_BASE, XMUL_AXILITES_ADDR_A_DATA, operandoA);
        XMul_WriteReg(MULTIPLICADOR_BASE, XMUL_AXILITES_ADDR_B_DATA, operandoB);
        xil_printf("operandoA: 0x%08x\r\n", operandoA);
        xil_printf("operandoB: 0x%08x\r\n", operandoB);
   //     xil_printf("checkpoint 3\r\n");
        XMul_Start(&multiplicador);
        while(!XMul_IsDone(&multiplicador));
     //   xil_printf("checkpoint 4\r\n");
        producto= XMul_ReadReg(MULTIPLICADOR_BASE, XMUL_AXILITES_ADDR_AP_RETURN);
        xil_printf("producto: 0x%08x\r\n", producto);
    	}

      XMul_Release(&multiplicador);
        /* Loop forever */
//        while(1){
//        	xil_printf("loop\r\n");
//        	short a = 9;
//        	xil_printf("a es: %d\n", a);
 //          xil_printf("producto: 0x%08x\r\n", producto);

//                }
        return 1;
}

